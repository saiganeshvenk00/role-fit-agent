{
  "name": "Job Scrapper_Resume Rating",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1080,
        -120
      ],
      "id": "764f1f25-0f51-494a-bc14-7c1ce09f900e",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://rss.app/feeds/k90GlNoaSdYKkkP9.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        -920,
        -120
      ],
      "id": "51073b0d-0679-424a-95fc-f0fd5158caf4",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1af5KBbVPc_awO5Gp1Ye-rbwp1efnJ2DUhr7TaUFqhps",
          "mode": "list",
          "cachedResultName": "LinkedIn Job List",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1af5KBbVPc_awO5Gp1Ye-rbwp1efnJ2DUhr7TaUFqhps/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1af5KBbVPc_awO5Gp1Ye-rbwp1efnJ2DUhr7TaUFqhps/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $('Code').item.json.Title }}",
            "Company": "={{ $('Code').item.json[\"company name\"] }}",
            "JD": "={{ $('Code').item.json[\"Job Description\"] }}",
            "Date": "={{ $now.toFormat('dd-MM-yyyy') }}",
            "Location": "={{ $('Code').item.json.location }}",
            "Salary Range": "={{ $('Code').item.json[\"salary range\"] }}",
            "Link": "={{ $('Loop Over Items').item.json.link }}",
            "Score": "={{ $('JD-Resume match scorer').item.json.output }}"
          },
          "matchingColumns": [
            "Company"
          ],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Company",
              "displayName": "Company",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "JD",
              "displayName": "JD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Salary Range",
              "displayName": "Salary Range",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        300,
        280
      ],
      "id": "8cd9e282-0304-4036-8db5-4f366f77decf",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "62m4OghTnAUPVZFb",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "maxItems": 15
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -740,
        -120
      ],
      "id": "e195bcc6-0288-4b98-9f57-6ba2785b933b",
      "name": "Limit"
    },
    {
      "parameters": {
        "jsCode": "return items.map((item) => {\n  const input = item.json.message.content;\n\n  // Handle both plain string and JSON inputs\n  const rawText = typeof input === 'string' ? input : Object.values(input).join('\\n');\n\n  function extractField(pattern, text) {\n    const match = text.match(pattern);\n    return match ? match[1].trim().replace(/\\n/g, ' ') : '';\n  }\n\n  const result = {\n    \"company name\": extractField(/Company:\\s*(.+)/i, rawText),\n    \"Title\": extractField(/Title:\\s*(.+)/i, rawText),\n    \"location\": extractField(/Location:\\s*(.+)/i, rawText),\n    \"salary range\": extractField(/Salary Range:\\s*(.+)/i, rawText),\n  };\n\n  const rawDescription = extractField(/Job Description:\\s*(.+?)(?=\\n\\S|$)/is, rawText);\n\n  // Trim to 200 characters\n  result[\"Job Description\"] = rawDescription.length > 200 \n    ? rawDescription.substring(0, 197).trim() + \"...\" \n    : rawDescription;\n\n  return { json: result };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        280
      ],
      "id": "3783af00-e0a9-4fab-bdee-36d37149165d",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -500,
        -120
      ],
      "id": "19f25510-0eac-46e5-9dde-ce1aad676637",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        0,
        100
      ],
      "id": "f05de973-4911-45e9-b42e-659c3321e2b3",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "oi1nrM5F9gqYgDP5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bd691c6e-dc03-41ba-933e-4ee881c69d2b",
              "leftValue": "={{ $json.output }}",
              "rightValue": "7",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "16e7875c-ce44-4a6a-899c-328801ceaf69",
              "leftValue": "={{ $json.output }}",
              "rightValue": "8",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "ef5fce6c-9468-4984-9bfa-d986f95d2810",
              "leftValue": "={{ $json.output }}",
              "rightValue": "9",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "475404fd-819a-4b42-a29e-856316c267f3",
              "leftValue": "={{ $json.output }}",
              "rightValue": "10",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        320,
        -40
      ],
      "id": "bacfc421-c44b-4c7b-ae91-424a1fd380b2",
      "name": "If"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1080,
        100
      ],
      "id": "ebebda6a-588e-499e-979c-33e073ca953f",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "maxItems": 15
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -740,
        100
      ],
      "id": "a0b77875-f976-4117-b126-f2415672fa65",
      "name": "Limit1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1080,
        320
      ],
      "id": "c09bbd50-54fc-4778-9a3a-3961d6881ea9",
      "name": "Schedule Trigger2"
    },
    {
      "parameters": {
        "url": "https://rss.app/feeds/YWDG2qc2rgYYNB82.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        -920,
        320
      ],
      "id": "589d0cf4-dda6-4aa6-a5ff-40c978d824e6",
      "name": "RSS Read2"
    },
    {
      "parameters": {
        "maxItems": 15
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -740,
        320
      ],
      "id": "b13f1b4a-4cab-46cd-93b5-c4ef68a08138",
      "name": "Limit2"
    },
    {
      "parameters": {
        "content": "## Product Management",
        "height": 200,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        -180
      ],
      "id": "cccff226-e79d-4e63-a87a-018e64b7c6d9",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Project Management",
        "height": 200,
        "width": 560,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        40
      ],
      "id": "689863cb-f510-4145-bb62-3647c4f8e984",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "https://rss.app/feeds/fRsHdVkPRjD8jZ2F.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        -920,
        100
      ],
      "id": "98e3263c-6fc2-4b49-9f1b-e4123598cea3",
      "name": "RSS Read1"
    },
    {
      "parameters": {
        "content": "## Product Marketing Management",
        "height": 220,
        "width": 560,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        260
      ],
      "id": "e619163d-a903-43fe-a47a-b380188d9294",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Score Role Fit",
        "height": 380,
        "width": 1000,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        -180
      ],
      "id": "930d5dd4-8451-4490-af63-7a54ab310818",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Update Sheet",
        "height": 260,
        "width": 1000,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        220
      ],
      "id": "8f00d77c-d420-40e1-b87e-397e8fb9c7da",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "url": "={{ $json.link }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -300,
        -40
      ],
      "id": "34f50b73-b83e-496f-8509-4b05cbb507fc",
      "name": "Pull HTML of JD"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -140,
        -40
      ],
      "id": "1a0bff05-d5da-4899-a6e0-463ac7b7a2e2",
      "name": "Timeout | Avoid Rate Limiting",
      "webhookId": "58e92601-b655-4a15-b454-b1e7018bfd58"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1Fg2bbd5raAnga5g6NT9lVrZQRk78DNzsKLrASYIcPHk/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        200,
        100
      ],
      "id": "246a944c-173b-4527-aab7-9a8b59eddc2d",
      "name": "Resume Reference",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "9lk6M58Y5325LXqR",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert resume evaluator. You analyze a candidate’s resume (attached as a tool) against job description: {{ $('Pull HTML of JD').item.json.data }}  and score the match out of 10. Be strict but fair, considering alignment in skills, experience, and impact. Output only a number.\n ",
        "options": {
          "systemMessage": "Here is a job description. Evaluate how well the attached resume matches the requirements and rate it out of 10. Only return a **whole number**.\n\nCompare the resume against the following 6 factors:\n\n1. **Role Alignment and Responsibilities** (2 pts)  \n   - 1 pt: Resume reflects same/similar role and scope  \n   - 1 pt: Mentions related methodologies, tools, or responsibilities  \n\n2. **Relevant Work Experience** (2 pts)  \n   - 1 pt: Experience in a similar role or function  \n   - 1 pt: Shows career progression or multiple relevant projects  \n\n3. **Technical Skills Match** (2 pts)  \n   - 1 pt: Resume covers 75% of technical skills in JD  \n   - 1 pt: Skills are shown in use, not just listed  \n\n4. **Industry/Domain Familiarity** (1 pt)  \n   - 0.5 pt: Experience in same/similar industry  \n   - 0.5 pt: Uses industry-specific terms or examples  \n\n5. **Impact and Accomplishments** (2 pts)  \n   - 1 pt: Measurable results or KPIs are shown  \n   - 1 pt: Demonstrates initiative, leadership, or unique value  \n\n6. **Communication and Clarity of Resume** (1 pt)  \n   - 0.5 pt: Clear formatting and structure  \n   - 0.5 pt: Language is concise, grammatically correct, and direct  \n\n---\n\nJob Description:\n{{ $json[\"Job Description\"] }}\n\nOnly return a whole number from 0 to 10.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        20,
        -40
      ],
      "id": "cddaf293-eb91-4ede-9956-6959dad86cbe",
      "name": "JD-Resume match scorer"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "You are an intelligent bot capable of extracting data from a job listing site.",
              "role": "system"
            },
            {
              "content": "=Here is the job site:  {{ $('Pull HTML of JD').item.json.data }}"
            },
            {
              "content": "Give me only the company name, title, Job Description (under 200 characters), salary range (if available), and location. You need not explain the output and avoid markdown.\n",
              "role": "assistant"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -260,
        280
      ],
      "id": "87badc03-818c-4f31-888a-c566a98c066e",
      "name": "Extract JD Info",
      "credentials": {
        "openAiApi": {
          "id": "oi1nrM5F9gqYgDP5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -460,
        280
      ],
      "id": "263da1ab-56bf-4d1c-8fab-756eec4d0da7",
      "name": "Wait",
      "webhookId": "6d310469-fee5-4f5f-ae37-8d5debb13aaf"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Pull HTML of JD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "JD-Resume match scorer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "RSS Read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "RSS Read2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read2": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read1": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pull HTML of JD": {
      "main": [
        [
          {
            "node": "Timeout | Avoid Rate Limiting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Timeout | Avoid Rate Limiting": {
      "main": [
        [
          {
            "node": "JD-Resume match scorer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resume Reference": {
      "ai_tool": [
        [
          {
            "node": "JD-Resume match scorer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "JD-Resume match scorer": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract JD Info": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Extract JD Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "69bf7eee-3ace-4ab7-a49a-1e5c1c3c8a4c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b1c9061e7e5a9871373211392725e0fcc7c0ef3f0ba8572de6b7837272613d28"
  },
  "id": "PFpdeubC2ISqsK0A",
  "tags": []
}